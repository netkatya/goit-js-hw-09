{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["//   Оголоси поза будь-якими функціями об’єкт formData з полями email та message, які спочатку мають\n// порожні рядки як значення: { email: \"\", message: \"\" }.\n\n// Використовуй метод делегування для відстеження змін у формі через подію input. Зберігай \n// актуальні дані з полів email та message у formData та записуй цей об’єкт у локальне сховище. \n// Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі. Якщо так, \n// використовуй їх для заповнення форми та об'єкта formData. Якщо ні, залиш поля форми порожніми.\n// Перед відправленням форми переконайся, що обидва поля форми заповнені. \n// Якщо будь-яке з полів (властивостей об’єкта formData) порожнє, показуй \n// сповіщення з текстом «Fill please all fields». Якщо всі поля заповнені, \n// виведи у консоль об’єкт formData з актуальними значеннями, очисти локальне \n// сховище, об’єкт formData і поля форми.\nconst formData = {\n    email: \"\",\n    message: \"\"\n  };\n\n  const form = document.querySelector(\".feedback-form\");\n  const STORAGE_KEY = 'feedback-form-state';\n\nform.addEventListener(\"input\", event => {\n  const { name, value } = event.target;\n  formData[name] = value;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n})\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const storageData = localStorage.getItem(STORAGE_KEY);\n  if (storageData) {\n    const parsedData = JSON.parse(storageData);\n    formData.email = parsedData.email;\n    formData.message = parsedData.message;\n  }\n\n    form.elements.email.value = formData.email;\n    form.elements.message.value = formData.message;\n})\n\nform.addEventListener(\"submit\", event => {\n  event.preventDefault();\n\n  if (!formData.email.trim() || !formData.message.trim()) {\n    alert(\"Fill please all fields\");\n    return;\n  }\n\n  console.log(formData);\n\n  formData.email = \"\";\n  formData.message = \"\";\n  localStorage.removeItem(STORAGE_KEY);\n  form.reset();\n})"],"names":["formData","form","STORAGE_KEY","event","name","value","storageData","parsedData"],"mappings":"wFAaA,MAAMA,EAAW,CACb,MAAO,GACP,QAAS,EACb,EAEQC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAc,sBAEtBD,EAAK,iBAAiB,QAASE,GAAS,CACtC,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAM,OAC9BH,EAASI,CAAI,EAAIC,EACjB,aAAa,QAAQH,EAAa,KAAK,UAAUF,CAAQ,CAAC,CAC5D,CAAC,EAED,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMM,EAAc,aAAa,QAAQJ,CAAW,EACpD,GAAII,EAAa,CACf,MAAMC,EAAa,KAAK,MAAMD,CAAW,EACzCN,EAAS,MAAQO,EAAW,MAC5BP,EAAS,QAAUO,EAAW,OAC/B,CAECN,EAAK,SAAS,MAAM,MAAQD,EAAS,MACrCC,EAAK,SAAS,QAAQ,MAAQD,EAAS,OAC3C,CAAC,EAEDC,EAAK,iBAAiB,SAAUE,GAAS,CAGvC,GAFAA,EAAM,eAAc,EAEhB,CAACH,EAAS,MAAM,KAAI,GAAM,CAACA,EAAS,QAAQ,OAAQ,CACtD,MAAM,wBAAwB,EAC9B,MACD,CAED,QAAQ,IAAIA,CAAQ,EAEpBA,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnB,aAAa,WAAWE,CAAW,EACnCD,EAAK,MAAK,CACZ,CAAC"}